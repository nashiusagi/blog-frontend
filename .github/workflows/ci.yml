---
name: ci

on: 
  push:
    branches:
      - feature/**

env:
  TZ: Asia/Tokyo

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [18, 20]
    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: pnpm setup
        uses: pnpm/action-setup@v2
        with:
          version: 8 

      - name: node setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }} 
          cache: pnpm

      - name: get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: restore cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: install dependent modules
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: cache modules
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

  lint:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        node_version: [18, 20]
    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: pnpm setup
        uses: pnpm/action-setup@v2
        with:
          version: 8 

      - name: node setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version}}
          cache: pnpm

      - name: get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        
      - name: restore cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: install dependent modules
        run: pnpm install --frozen-lockfile

      - name: execute lint
        run: pnpm lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        node_version: [18, 20]
    steps:
      - name: code checkout
        uses: actions/checkout@v4

      - name: pnpm setup
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: node setup
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: pnpm
      
      - name: get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        id: restore-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: install additional dependencies
        run: pnpm install

      - name: build
        run: pnpm build

  unit_test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        node_version: [18, 20]
    steps:
      - name: code checkout
        uses: actions/checkout@v3

      - name: pnpm setup
        uses: pnpm/action-setup@v2
        with:
          version: 8
        
      - name: node setup
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: pnpm
        
      - name: get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        id: restore-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}

      - name: install additional dependencies
        run: pnpm install

      - name: unit test
        run: pnpm test:unit
